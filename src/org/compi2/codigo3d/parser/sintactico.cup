package org.compi2.codigo3d.parser;

import java_cup.runtime.Symbol;

//PARSER PARA EL ARCHIVO DE ESCENARIOS
parser code
{://Codigo visible

    public void syntax_error(Symbol s){
        System.err.println(s);
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.err.println("T.T");
        System.err.println(s);
    }

:}

action code
{://Codigo de acciones
      
:}

terminal String ID, ENTERO, DECIMAL;
terminal TokenC3D MAS, MENOS, MULT, DIV, POT, PAR_IZQ, PAR_DER,MAYOR_QUE,MENOR_QUE,IGUAL,DIFERENTE,MAYOR_IGUAL,MENOR_IGUAL,NOT,AND,OR;
nonterminal NodoC3D inicial, expresion,relacional,logico;


precedence left OR;
precedence left AND;
precedence left NOT;
precedence left MAS, MENOS;
precedence left MULT, DIV; 
precedence right POT; 


start with inicial;

inicial     ::= {: ControlC3D.reiniciar(); :} logico:exp 
                    {: 
                        RESULT = exp;
                        if(exp!=null){
                            ControlC3D.agregarC3D("\n//Etiquetas Verdaderas: " + exp.ETQV+"\n");
                            ControlC3D.agregarC3D("\n//Etiquetas falsas: " + exp.ETQF+"\n");

                        }
                        else{
                            ControlC3D.agregarC3D("//Ãšltimo valor: " + exp.getCad());
                        }
                    :};
logico      ::= logico:izq OR {: String c3d = izq.ETQF + " : "+"\n";   ControlC3D.agregarC3D(c3d);
                      :} logico:der 
                    {:
                        //String temp = ControlC3D.generaTemp();
                        String LV = izq.getVerdadera() + "," + der.getVerdadera();
                        String LF = der.getFalsa();
                        RESULT = new NodoC3D(LV, LF);
                    :}
            | logico:izq AND {: String c3d = izq.ETQV + " : "+"\n";   ControlC3D.agregarC3D(c3d); 
                      :} logico:der 
                    {:
                        //String temp = ControlC3D.generaTemp();
                        String LV = der.getVerdadera();
                        String LF = izq.getFalsa() + "," + der.getFalsa();
                        RESULT = new NodoC3D(LV, LF);
                    :}

            | NOT logico:der 
                    {:
                        //String temp = ControlC3D.generaTemp();
                        String LV = der.getFalsa();
                        String LF = der.getVerdadera();
                        RESULT = new NodoC3D(LV, LF);                        
                    :}

            | relacional:der 
                    {:
                          RESULT = new NodoC3D(der.ETQV, der.ETQF);  
                    :}
            ;

relacional  ::= expresion:izq MAYOR_QUE expresion:der 
                    {: 
                        String tempv = ControlC3D.generaTemp();
                        String tempf = ControlC3D.generaTemp();
                        String c3d = "if "+izq.getCad() + ">" + der.getCad() + " then goto "+tempv+"\n";
                        c3d = c3d + " goto "+tempf+"\n";
                        //String c3d = temp + " = " + izq.getCad() + " > " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(tempv, tempf);
                    :}
            | expresion:izq MENOR_QUE expresion:der 
                        {:
                            String tempv = ControlC3D.generaTemp();
                            String tempf = ControlC3D.generaTemp();
                            String c3d = "if "+izq.getCad() + "<" + der.getCad() + " then goto "+tempv+"\n";
                            c3d = c3d + " goto "+tempf+"\n";    
                            //String c3d = temp + " = " + izq.getCad() + " < " + der.getCad() + ";\n";
                            ControlC3D.agregarC3D(c3d);
                            RESULT = new NodoC3D(tempv, tempf);
                           

                        :}
            | expresion:izq MAYOR_IGUAL expresion:der 
                        {:
                            String tempv = ControlC3D.generaTemp();
                            String tempf = ControlC3D.generaTemp();
                            String c3d = "if "+izq.getCad() + ">=" + der.getCad() + " then goto "+tempv+"\n";
                            c3d = c3d + " goto "+tempf+"\n";    
                            String temp = ControlC3D.generaTemp();
                            //String c3d = temp + " = " + izq.getCad() + " >= " + der.getCad() + ";\n";
                            ControlC3D.agregarC3D(c3d);
                            RESULT = new NodoC3D(tempv, tempf);

                        :}
            | expresion:izq MENOR_IGUAL expresion:der 
                        {:
                            String tempv = ControlC3D.generaTemp();
                            String tempf = ControlC3D.generaTemp();
                            String c3d = "if "+izq.getCad() + "<=" + der.getCad() + " then goto "+tempv+"\n";
                            c3d = c3d + " goto "+tempf+"\n";    
                            String temp = ControlC3D.generaTemp();
                            //String c3d = temp + " = " + izq.getCad() + " <= " + der.getCad() + ";\n";
                            ControlC3D.agregarC3D(c3d);
                            RESULT = new NodoC3D(tempv, tempf);
                        
                        :}
            | expresion:izq IGUAL expresion:der 
                        {:
                            String tempv = ControlC3D.generaTemp();
                            String tempf = ControlC3D.generaTemp();
                            String c3d = "if "+izq.getCad() + "==" + der.getCad() + " then goto "+tempv+"\n";
                            c3d = c3d + " goto "+tempf+"\n";    

                            String temp = ControlC3D.generaTemp();
                            //String c3d = temp + " = " + izq.getCad() + " == " + der.getCad() + ";\n";
                            ControlC3D.agregarC3D(c3d);
                            RESULT = new NodoC3D(tempv, tempf);
                        :}
            | expresion:izq DIFERENTE expresion:der 
                        {:
                            String tempv = ControlC3D.generaTemp();
                            String tempf = ControlC3D.generaTemp();
                            String c3d = "if "+izq.getCad() + ">" + der.getCad() + " then goto "+tempv+"\n";
                            c3d = c3d + " goto "+tempf+"\n";    
                            String temp = ControlC3D.generaTemp();
                            //String c3d = temp + " = " + izq.getCad() + " != " + der.getCad() + ";\n";
                            ControlC3D.agregarC3D(c3d);
                            RESULT = new NodoC3D(tempv, tempf);
                        :}
            | expresion:der 
                        {:
                             RESULT = new NodoC3D(der.getCad());
                        :}
            ;


expresion   ::= expresion:izq MAS expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " + " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq MENOS expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " - " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq MULT expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " * " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq DIV expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " / " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq POT expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " ^ " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   MENOS expresion:exp 
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = - " + exp.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   PAR_IZQ expresion:exp PAR_DER   
                    {: RESULT = exp; :}
            |   ID:id           
                    {: RESULT = new NodoC3D(id); :}
            |   ENTERO:entero   
                    {: RESULT = new NodoC3D(entero); :}
            |   DECIMAL:decimal 
                    {: RESULT = new NodoC3D(decimal); :}
            ;